
#### init ####
    # Centos7 usually starts without networking, start it
      # Get ip addr
       dhclient
    ## Configure networking to start on boot
      > vi /etc/sysconfig/network-scripts/ifcfg-eth0
      # Change ONBOOT option from no to yes
      # ONBOOT="yes"

    # Install crucial packages 
     sudo apt-get install -y git vim wget 
    # Take off password prompt for sudo
     sudo vi /etc/sudoers

     """
     egall ALL=(ALL) NOPASSWD: ALL
     """

    # Install the good tools
      sudo yum install -y epel-release
      sudo yum install -y git gawk perf tmux openssh-server \
               nmap curl tcpdump wireshark hexedit  \
               make automake gcc gcc-c++ kernel-devel lynx \
               unzip python34 python34-devel python34-pip \
               tree R 

    ## VirtualBox Install ##
      # Enable vbox repo
        cd /etc/yum.repos.d
        sudo wget http://download.virtualbox.org/virtualbox/rpm/rhel/virtualbox.repo
      # Install dynamic kernel module support
        sudo yum --enablerepo=epel install -y dkms
      # Get more cools tools
        sudo yum groupinstall -y "Development Tools"
        sudo yum install -y kernel-devel
      # Search for latest version
        yum search VirtualBox
      # Install latest where v.x is the highest number output from the search
        sudo yum install VirtualBox-v.x
      
    # Create dirs
      mkdir ~/scratch
      mkdir ~/develp
      mkdir ~/install

    # Change hostname
     hostnamectl set-hostname cool-hostname

#### Automatic Security updates ####
    # install yum-cron
     sudo yum install -y yum-cron
    # Edit config file, change:
        """
        update_cmd = security
        apply_updates = yes 
        """"
      # update_cmd default=>security
      # apply_updates no=>yes

    # Check status
      sudo systemctl status yum-cron
    # Start yum-cron service on boot
      sudo systemctl enable yum-cron
    # Start yum-cron service now
      sudo systemctl start yum-cron
    # Check status
      sudo systemctl status yum-cron

#### ssh init ####

    # Create a new ssh dir
     mkdir -p ~/.ssh

    # Jump into new ssh dir
     cd ~/.ssh

    # Generate new ssh key pair using RSA 
     ssh-keygen -t rsa
 
    # Copy your new key over to other computers
     cat ~/.ssh/id_rsa.pub | ssh me@my_ip_goes_here 'cat >> ~/.ssh/authorized_keys'
 
    # Create your own authorized_keys file and set permissions
     touch ~/.ssh/authorized_keys
 
    # Set proper permissions on ssh
     chmod 0700 ~/.ssh
     chmod 0642 ~/.ssh/authorized_keys
     chmod 600 ~/.ssh/config


    ## Change to high port ##
      # EQS NOTE: Change the highport to something in the range of 49152-65535
      #           For the sake of this guide I'm just using 2244
      # Edit sshd config
      sudo vi /etc/ssh/sshd_config
      # 
      """
      Port 24816
      """
      # Install package to manage SeLinux
       sudo yum -y install policycoreutils-python
      # Use semanage to change port permission
       sudo semanage port -a -t ssh_port_t -p tcp 24816
      # Add firewall rule for new port
       sudo firewall-cmd --permanent --zone=public --add-port=24816/tcp
      # Restart Firewall
       sudo firewall-cmd --reload
      # Restart sshd
       sudo systemctl restart sshd.service

## Nginx init ##
  # install nginx
   sudo yum install -y nginx
  # start nginx
   sudo systemctl start nginx
  # start firewalld
   sudo systemctl start firewalld
  # enable nginx to start on boot
   sudo systemctl enable nginx
  # Configure firewall
   sudo firewall-cmd --permanent --zone=public --add-service=http
   sudo firewall-cmd --permanent --zone=public --add-service=https
   sudo firewall-cmd --reload


## Postgres init ##
  # install postgres
   sudo yum install -y postgresql-server postgresql-contrib
  # Setup db
   sudo postgresql-setup initdb
  # Change following two lines in pg_hba.conf to "trust" 
  # to allow passwordless connect
    sudo vi /var/lib/pgsql/data/pg_hba.conf
    """
    host    all             all             127.0.0.1/32            trust
    host    all             all             ::1/128                 trust
    """
  # start postgres
   sudo systemctl start postgresql
  # enable postgres to start on boot
   sudo systemctl enable postgresql
  # Add db user (name should be same as db)
   sudo useradd dbname
  # access psql shell
   sudo -i -u dbname psql

## Javascript init ##
  # install javascript
   sudo yum install -y nodejs npm  



## VM Centos ##

    ## Install guest additions
    # Get epel
    sudo yum install -y epel-release
    # Enable epel and install dkms
    sudo yum --enablerepo=epel install -y dkms
    # Install development tools
    > yum groupinstall "Development Tools"
    > yum install kernel-devel
    # from VM Devices menu select Install Guest Additions CD
    > cd /media/VBOXADDITIONS_4.3.26_98988
    > sudo sh VBoxLinuxAdditions.run
    # done.

#### Install GUI (centos_minimal_install.iso) ####
    ## Install Desktop and other such utils
    > yum -y groupinstall "Desktop" "Desktop Platform" \
      "X Window System" "Fonts" "Graphical Administration Tools"
      "Internet Browser" "General Purpose Desktop" \ 
      "Compatibility libraries" "KDE desktop"

    # Optional
    > yum -y groupinstall "Office Suite and Productivity"

    > yum -y groupinstall "Graphics Creation Tools"

## If you want to start the GUI on boot:
    > vi /etc/inittab
    # Change the following line
    # id:3:initdefault:
    # to
    # id:5:initdefault:

    # Reboot
    > init 6
    # done.

