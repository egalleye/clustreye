# This is a guide to setting up a Debian system so that it's up to speed for dev 
# NOTE: If any of these commands prompt you accept defaults unless I specify otherwise

# Update system 
  sudo apt-get update && sudo apt-get upgrade -y;
# Install vim cuz it's key to all
  sudo apt-get install -y git vim

# Add yourself to sudoers properly (take out password prompt)
  sudo vi /etc/sudoers
# Add the following to the bottom of screen
    """
    egall ALL=(ALL) NOPASSWD: ALL
    """
# Grab the handy tools they didn't install
  sudo apt-get install -y git tmux openssh-server nmap curl tcpdump tshark hexedit gcc build-essential lynx unzip python3 python3-dev tree virtualbox r-base-core bc

  sudo apt-get install -y linux-tools-common linux-tools-generic linux-tools-4.8.0-34-generic
# Create scratch dir
  mkdir ~/scratch
  mkdir ~/develp
  mkdir ~/install

#### Automatic Security updates ####
    
    # Install necessary packages
      sudo apt-get install -y unattended-upgrades apt-listchanges

    # Edit file and add your email on problematic state
      sudo vi /etc/apt/apt.conf.d/50unattended-upgrades 

      """
      Unattended-Upgrade::Mail "username@mail.com";
      """

    # Create 20auto-upgrades file
      sudo dpkg-reconfigure -plow unattended-upgrades

    # NOTE: Check the log after a day or two to verify
      sudo vi /var/log/unattended-upgrades/*

#### git init ####
    # NOTE: First step is to copy public key to github.com 
    # This can be done through the settings/ssh-key menu
    # Copy and paste the following to github.com
      cat ~/.ssh/id_rsa.pub
    # Setup config
      git config --global user.name "User Name"
      git config --global user.email "username@userdomain.com"
      git config --global core.editor vi

#### SSH setup ####
  
    # Create .ssh directory
      mkdir ~/.ssh/
      cd ~/.ssh/
    # Generate public/private keypair 
      ssh-keygen -t rsa
    
    # Copy id over for passwordless ssh other places
      ssh-copy-id username@otherservers.ip

#### Webserver setup ####
    ## Install nginx ##
        sudo apt-get install -y nginx 
  
      ## Setup firewall ##
          sudo ufw enable
          sudo systemctl enable ufw
        # Start ufw
          sudo systemctl start ufw
        # Configure Firewall
          sudo ufw allow ssh
          sudo ufw allow 'Nginx HTTP'
          sudo ufw allow 'Nginx HTTPS'
  
      # Enable nginx
        sudo systemctl enable nginx
      # Start nginx
        sudo systemctl start nginx
    

    ## Install postgres ##
        sudo apt-get install -y postgresql postgresql-contrib
      # Create new user account (with same name as database)
        sudo adduser pg_db
      # Change to postgres user
        sudo -i -u postgres
       
      # Create a postgres superuser useraccount (same name as your database)
        createuser --interactive # yes to superuser username pg_db
  
      # Create database
        createdb {pg_db}
      # Open postgres cmd prompt
        psql
      # or
        psql {pg_db}
      # Fromp psql prompt you can check connection
        \conninfo
      # View tables
        \dt 
      # Quit
        \q
      # pg_hba.conf
        #### psycopg2 ####
          ## init ##
            # Edit pg_hba.conf, found under /etc/postgresql/versionx.x/main/pg_hba.conf
              vi /etc/postgresql/9.5/main/pg_hba.conf
                # Change METHOD md5 => trust
                """
                # TYPE  DATABASE    USER        CIDR-ADDRESS          METHOD
                host    all         all         127.0.0.1/32         trust
                """
            # Update postgres with new config
              sudo systemctl restart postgresql 


    ## Install Node.js ##
        curl -sL https://deb.nodesource.com/setup_7.x | sudo -E bash -
        sudo apt-get install -y nodejs
      ## Running hello.js
        # Make hello.js script executable
          chmod +x hello.js
        # Run hello.js
          node hello.js
        # From a second terminal check status with curl
          curl http://localhost:8080
      ## Install D3 graphing lib ##
        # Install lib
          npm install d3
          npm install requirejs
        
        # Rest of setup at: https://d3js.org/#introduction

#### Extras ####
    ## Install chrome ##
      # Add key
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add - 
      # Set Repository
        sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
      # Update apt-get 
        sudo apt-get update 
        sudo apt-get install google-chrome-stable

    ## Install latex ##
      # Big package so I didn't include in the main install
        sudo apt-get install -y texlive-full
      # Optional install texmaker (editor if you don't like vi)
        sudo apt-get install -y texmaker
      # Install .pdf reader (kde flavor)
        sudo apt-get install -y okular
      # or (gnome flavor)
        sudo apt-get install -y evince

    

